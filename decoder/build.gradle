import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        mavenLocal()
    }

    dependencies {
        classpath 'org.codehaus.griffon:gradle-griffon-plugin:2.16.0'
        classpath 'gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.15.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.39.0'
        classpath 'gradle.plugin.net.nemerosa:versioning:2.15.1'
    }
}

apply plugin: 'groovy'
apply plugin: 'org.codehaus.griffon.griffon'
apply plugin: 'net.nemerosa.versioning'

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
    macosx = System.getProperty('os.name').contains('Mac OS')
}

griffon {
    disableDependencyResolution = false
    includeGroovyDependencies = true
    version = '2.16.0'
    toolkit = 'swing'
    applicationProperties = [
            'build_date'    : buildDate,
            'build_time'    : buildTime,
            'build_revision': versioning.info.commit
    ]
}

mainClassName = 'com.spw.rr.Launcher'

apply from: 'gradle/publishing.gradle'
apply from: 'gradle/code-quality.gradle'
apply plugin: 'com.github.ben-manes.versions'


processResources.duplicatesStrategy(DuplicatesStrategy.WARN)

dependencies {
    configurations.all {
        resolutionStrategy {
            force 'org.codehaus.griffon:griffon-swing-groovy:2.16.0'
        }
    }
    api "org.codehaus.griffon:griffon-guice:${griffon.version.get()}"
    runtimeOnly 'org.slf4j:slf4j-log4j12:1.7.32'
    //runtimeOnly "org.slf4j:slf4j-simple:${slf4jVersion}"

    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    testImplementation "org.codehaus.griffon:griffon-fest-test:${griffon.version.get()}"
    testImplementation "org.spockframework:spock-core:${spockVersion}"
    testImplementation('org.awaitility:awaitility-groovy:3.1.0') {
        exclude group: 'org.codehaus.groovy', module: 'groovy'
    }
    //testImplementation "org.codehaus.groovy:groovy:${groovyVersion}"
    griffon 'org.codehaus.griffon.plugins:griffon-miglayout-plugin:2.0.0'
}



startScripts {
    doLast {
        if (!macosx) unixScript.text = unixScript.text.replaceAll('"(-Xdock:(name|icon)=)([^"]*?)(")', ' ')
        windowsScript.text = windowsScript.text.replaceAll('"(-Xdock:(name|icon)=)([^"]*?)(")', ' ')
    }
}

if (hasProperty('debugRun') && ((project.debugRun as boolean))) {
    run {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
    }
}