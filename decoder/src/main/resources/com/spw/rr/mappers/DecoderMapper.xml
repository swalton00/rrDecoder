<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spw.rr.mappers.DecoderMapper">
    <insert id="insertRosterEntry" parameterType="com.spw.rr.RosterEntry" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        INSERT INTO rrdec.roster
        (entered,
         fullpath,
         systemName)
        VALUES (CURRENT TIMESTAMP,
                        #{fullPath},
                        #{systemName})
    </insert>
    <update id="updateRosterEntry" parameterType="com.spw.rr.RosterEntry">
        UPDATE
            rrdec.roster
        SET fullpath=#{fullPath},
            systemName = #{systemName},
            dateUpdated = CURRENT TIMESTAMP
        WHERE
            id = #{id}
    </update>
    <select id="listRosters" resultType="com.spw.rr.RosterEntry">
        SELECT id,
               entered as entryTime,
               fullpath,
               dateupdated,
               systemname
        from rrdec.roster
        order by systemname
    </select>
    <select id="listSystemRosters" parameterType="String" resultType="com.spw.rr.RosterEntry">
        SELECT id,
               entered AS entryTime,
               fullpath,
               dateupdated,
               systemname
        FROM rrdec.roster
        WHERE systemName = #{systemName}
        ORDER BY systemname
    </select>
    <select id="getRosterEntry" parameterType="integer" resultType="com.spw.rr.RosterEntry">
        SELECT id,
               entered AS entryTime,
               fullpath,
               dateupdated,
               systemname
        FROM rrdec.roster
        WHERE id = #{id}
        ORDER BY systemname
    </select>
    <select id="findRosterEntry" resultType="com.spw.rr.RosterEntry">
        SELECT id,
               entered AS entryTime,
               fullpath,
               dateupdated,
               systemname
        FROM rrdec.roster
        WHERE systemName = #{param1}
          AND fullPath = #{param2};
    </select>
    <insert id="insertDecoderEntry" parameterType="com.spw.rr.DecoderEntry" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        INSERT INTO rrdec.Decoder
        (decoderid,
         filename,
         roadnumber,
         roadname,
         manufacturer,
         owner,
         dccaddress,
         productid,
         decoderTypeId,
         rosterid,
         dateUpdated)
        VALUES (#{decoderId},
                #{fileName},
                #{roadNumber},
                #{roadName},
                #{manufacturer},
                #{owner},
                #{dccAddress},
                #{productId},
                #{decoderTypeId},
                #{rosterId},
                #{dateUpdated})
    </insert>
    <update id="updateDecoderEntry" parameterType="com.spw.rr.DecoderEntry">
        UPDATE
            rrdec.Decoder
        SET decoderid     = #{decoderId},
            filename      = #{fileName},
            roadnumber    = #{roadNumber},
            roadname      = #{roadName},
            manufacturer  = #{manufacturer},
            owner         = #{owner},
            dccaddress    = #{dccAddress},
            productId     = #{productId},
            decoderTypeId = #{decoderTypeId},
            dateUpdated   = #{dateUpdated}
        WHERE id = #{id}
    </update>
    <delete id="deleteDecoderEntry" parameterType="com.spw.rr.DecoderEntry">
        DELETE
        FROM rrdec.Decoder
        WHERE id = #{id};
    </delete>
    <select id="listDecoders" resultType="com.spw.rr.DecoderEntry">
        SELECT id,
               decoderid,
               filename,
               roadnumber,
               roadname,
               owner,
               model,
               dccaddress,
               manufacturerid,
               decoderTypeId,
               rosterid,
               dateUpdated
        FROM rrdec.Decoder
        ORDER BY rosterid, decoderid
    </select>
    <select id="listDecodersByRosterID" resultType="com.spw.rr.DecoderEntry">
        SELECT id,
               decoderid,
               filename,
               roadnumber,
               roadname,
               owner,
               model,
               dccaddress,
               manufacturerid,
               decoderTypeId,
               rosterid,
               dateUpdated
        FROM rrdec.Decoder
        <where>
        <foreach collection="param1"
         open = "rosterid IN (" separator="," close=")">
            #{item}
        </foreach>
        </where>
        ORDER BY id
    </select>
    <insert id="insertDecoderTypeEntry" parameterType="com.spw.rr.DecoderType" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        INSERT INTO rrdec.decoderType
        (decoderfamily,
         decodermodel,
         dateupdated)
        VALUES (#{decoderFamily},
                #{decoderModel},
                   CURRENT TIMESTAMP)
    </insert>
    <update id="updateDecoderTypeEntry" parameterType="com.spw.rr.DecoderType">
        UPDATE
            rrdec.decoderType
        SET decoderFamily = #{decoderFamily},
            decoderModel  = #{decoderModel},
            dateUpdated   = CURRENT TIMESTAMP
        WHERE
            id = #{id}
    </update>
    <select id="listDecoderTypes" resultType="com.spw.rr.DecoderType">
        SELECT id,
               decoderFamily,
               decoderModel,
               dateUpdated AS updated
        FROM rrdec.decoderType
        ORDER BY decoderFamily,
                 decoderModel
    </select>
    <select id="getDecoderType" resultType="com.spw.rr.DecoderType">
        SELECT id,
               decoderFamily,
               decoderModel,
               dateUpdated AS updated
        FROM rrdec.decoderType
        WHERE id = #{id}
    </select>
    <select id="findDecoderType" resultType="com.spw.rr.DecoderType">
        SELECT id,
               decoderFamily,
               decoderModel,
               dateUpdated AS updated
        FROM rrdec.decoderType
        WHERE decoderFamily = #{param1}
          AND decoderModel = #{param2}
    </select>
 </mapper>